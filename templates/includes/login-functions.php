<?php
/**
 * Login functions.
 *
 * @package     LECO_Client_Portal
 * @subpackage  Functions/Login
 * @copyright   Copyright (c) 2019, Laura Elizabeth
 * @license     http://opensource.org/licenses/gpl-2.0.php GNU Public License
 * @since       4.6
 */

// Exit if accessed directly.
if ( ! defined( 'ABSPATH' ) ) {
	exit;
}

/**
 * CP login form.
 *
 * @since 4.6
 */
function leco_cp_login_form() {
	$action    = isset( $_REQUEST['action'] ) ? sanitize_text_field( $_REQUEST['action'] ) : 'login';
	$errors    = new WP_Error();
	$http_post = ( 'POST' == $_SERVER['REQUEST_METHOD'] );

	if ( isset( $_GET['key'] ) ) {
		$action = 'resetpass';
	}

	switch ( $action ) {
		case 'lostpassword':
			leco_cp_lostpassword_form( $http_post, $errors );
			break;

		case 'resetpass':
		case 'rp':
			leco_cp_reset_password_form();
			break;

		default:
			$projects = leco_cp_get_projects_by_client( get_current_user_id() );
			$count    = count( $projects );

			if ( is_user_logged_in() && 0 === $count ) { ?>
				<p class="login-error"><?php echo apply_filters( 'leco_cp_login_error_message', esc_html__( 'You don\'t have permission to view this project. If this is your project, you\'ll need to request log in info from the owner.', 'leco-cp' ) ); ?></p>
			<?php } ?>
			<?php
			do_action( 'leco_cp_before_login_form' );

			$args = array(
				'echo'           => true,
				'form_id'        => 'loginform',
				'form_class'     => 'cp-loginform',
				'label_username' => __( 'Username' ),
				'label_password' => __( 'Password' ),
				'label_remember' => __( 'Remember Me' ),
				'label_log_in'   => __( 'Log In' ),
				'id_username'    => 'user_login',
				'id_password'    => 'user_pass',
				'id_remember'    => 'rememberme',
				'id_submit'      => 'wp-submit',
				'remember'       => true,
				'value_username' => null,
				'value_remember' => true,
			);

			if ( 'leco_client' === get_post_type() ) {
			    $args['redirect'] = get_permalink();
            }

			wp_login_form( $args );
	}
}

/**
 * CP lost password form.
 *
 * @since 4.6
 *
 * @param boolean  $http_post If it's a POST request.
 * @param WP_Error $errors Errors stored.
 */
function leco_cp_lostpassword_form( $http_post, $errors ) {
	if ( isset( $_GET['leco-cp-error'] ) ) {
		if ( 'invalidkey' == $_GET['leco-cp-error'] ) {
			$errors->add( 'invalidkey', __( 'Your password reset link appears to be invalid. Please request a new link below.' ) );
		} elseif ( 'expiredkey' == $_GET['leco-cp-error'] ) {
			$errors->add( 'expiredkey', __( 'Your password reset link has expired. Please request a new link below.' ) );
		}
	}

	if ( is_wp_error( $errors ) && ! empty( $errors->errors ) ) {
		leco_cp_set_error( 'leco-cp-lost-password-error', $errors->get_error_message() );
	}

	$lostpassword_redirect = ! empty( $_REQUEST['redirect_to'] ) ? $_REQUEST['redirect_to'] : add_query_arg( 'checkemail', 'confirm', leco_cp_login_url() );
	/**
	 * Filters the URL redirected to after submitting the lostpassword/retrievepassword form.
	 *
	 * @since 4.6
	 *
	 * @param string $lostpassword_redirect The redirect destination URL.
	 */
	$redirect_to = apply_filters( 'leco_cp_lostpassword_redirect', $lostpassword_redirect );

	/**
	 * Fires before the lost password form.
	 *
	 * @since 4.6
	 *
	 * @param WP_Error $errors A `WP_Error` object containing any errors generated by using invalid
	 *                         credentials. Note that the error object may not contain any errors.
	 */
	do_action( 'leco_cp_lost_password', $errors );

	echo '<p class="message">' . apply_filters( 'leco_cp_forgot_password_message', esc_html__( 'Please enter your username or email address. You will receive a link to create a new password via email.' ) ) . '</p>';

	$user_login = '';

	if ( isset( $_POST['user_login'] ) && is_string( $_POST['user_login'] ) ) {
		$user_login = wp_unslash( $_POST['user_login'] );
	}

	do_action( 'leco_cp_before_lost_password_form' );

	$blog_id = '';
	if ( is_multisite() ) {
	    $blog_id = '&site=' . get_current_blog_id();
    }
	?>

	<form name="lostpasswordform" id="loginform" action="<?php echo esc_url( network_site_url( 'wp-login.php?action=lostpassword' . $blog_id, 'login_post' ) ); ?>" method="post">
		<p>
			<label for="user_login" ><?php _e( 'Username or Email Address' ); ?><br />
				<input type="text" name="user_login" id="user_login" class="input" value="<?php echo esc_attr( $user_login ); ?>" size="20" autocapitalize="off" /></label>
		</p>
		<?php
		/**
		 * Fires inside the lostpassword form tags, before the hidden fields.
		 *
		 * @since 2.1.0
		 */
		do_action( 'lostpassword_form' );
		?>
		<input type="hidden" name="redirect_to" value="<?php echo esc_attr( $redirect_to ); ?>" />
        <p id="nav">
            <a href="<?php echo esc_url( leco_cp_login_url() ); ?>"><?php _e( 'Log in' ); ?></a>
        </p>
        <p class="login-submit"><input type="submit" name="wp-submit" id="wp-submit" class="button button-primary button-large" value="<?php esc_attr_e( 'Get New Password' ); ?>" /></p>
	</form>
	<?php
}

/**
 * Reset password form.
 *
 * @since 4.6
 */
function leco_cp_reset_password_form() {

	wp_enqueue_script( 'utils' );
	wp_enqueue_script( 'user-profile' );

	$rp_cookie = 'wp-resetpass-' . COOKIEHASH;
	$user      = new WP_User( LECO_Client_Portal()->session->get( 'leco_cp_password_reset_user' ) );
	if ( $user && isset( $_POST['pass1'] ) && ! empty( $_POST['pass1'] ) ) {
		LECO_Client_Portal()->session->set( 'leco_cp_password_reset_user', null );

        echo '<p class="message reset-pass">' . __( 'Your password has been reset.' ) . ' <a href="' . esc_url( leco_cp_login_url() ) . '">' . __( 'Log in' ) . '</a></p>';

	    return;
	}

	list( $rp_login, $rp_key ) = explode( ':', wp_unslash( $_COOKIE[ $rp_cookie ] ), 2 );

    echo '<p class="message reset-pass">' . __( 'Enter your new password below.' ) . '</p>';

	do_action( 'leco_cp_before_reset_password_form' );
    ?>
    <form name="resetpassform" id="resetpassform" action="<?php echo esc_url( add_query_arg( 'action', 'resetpass', home_url( $_SERVER['REQUEST_URI'] ) ) ); ?>" method="post" autocomplete="off">
        <input type="hidden" id="user_login" value="<?php echo esc_attr( $rp_login ); ?>" autocomplete="off" />

        <div class="user-pass1-wrap">
            <p>
                <label for="pass1"><?php _e( 'New password' ); ?></label>
            </p>

            <div class="wp-pwd">
                <div class="password-input-wrapper">
                    <input type="password" data-reveal="1" data-pw="<?php echo esc_attr( wp_generate_password( 16 ) ); ?>" name="pass1" id="pass1" class="input password-input" size="24" value="" autocomplete="off" aria-describedby="pass-strength-result" />
                    <span class="button button-secondary wp-hide-pw hide-if-no-js">
					<span class="dashicons dashicons-hidden"></span>
				</span>
                </div>
                <div id="pass-strength-result" class="hide-if-no-js" aria-live="polite"><?php _e( 'Strength indicator' ); ?></div>
            </div>
            <div class="pw-weak">
                <label>
                    <input type="checkbox" name="pw_weak" class="pw-checkbox" />
					<?php _e( 'Confirm use of weak password' ); ?>
                </label>
            </div>
        </div>

        <p class="user-pass2-wrap">
            <label for="pass2"><?php _e( 'Confirm new password' ); ?></label><br />
            <input type="password" name="pass2" id="pass2" class="input" size="20" value="" autocomplete="off" />
        </p>

        <p class="description indicator-hint"><?php echo wp_get_password_hint(); ?></p>
        <br class="clear" />

	    <?php
	    /**
	     * Fires following the 'Strength indicator' meter in the user password reset form.
	     *
	     * @since 3.9.0
	     *
	     * @param WP_User $user User object of the user whose password is being reset.
	     */
	    do_action( 'resetpass_form', $user );
	    ?>

        <input type="hidden" name="rp_key" value="<?php echo esc_attr( $rp_key ); ?>" />

        <p id="nav">
            <a href="<?php echo esc_url( leco_cp_login_url() ); ?>"><?php _e( 'Log in' ); ?></a>
        </p>

        <p class="login-submit"><input type="submit" name="wp-submit" id="wp-submit" class="button button-primary button-large" value="<?php esc_attr_e( 'Reset Password' ); ?>" /></p>
    </form>

	<?php
}
